-- Tests for repaying borrows

Macro NewBorrow borrowAmount borrowRate
    NewComptroller price:1.0 -- TODO: This should really be a price for a specific asset
    NewXToken ZRX cZRX
    NewXToken BAT cBAT borrowRate -- note: cannot use macros with named args right now
    Give cBAT 10e18 BAT -- Faucet some bat to borrow
    Support cZRX collateralFactor:0.5
    Support cBAT collateralFactor:0.5
    Prep Geoff Some ZRX cZRX
    Mint Geoff 100e18 cZRX
    EnterMarkets Geoff cZRX cBAT
    Borrow Geoff borrowAmount cBAT

Test "Borrow, hold a few blocks, and repay part"
    NewBorrow borrowAmount:1e18 borrowRate:0.000005
    Assert Equal (XToken cBAT BorrowBalance Geoff) 1e18
    Assert Equal (XToken cBAT TotalBorrowsCurrent) 1e18
    Assert Equal (Erc20 BAT TokenBalance Geoff) 1e18
    Assert Equal (Erc20 BAT TokenBalance cBAT) 9e18
    -- Now let's add some blocks and see what happs
    FastForward 300000 Blocks -- 1e18 * (1 + 300000 * 0.000005)
    Assert Equal (XToken cBAT BorrowBalance Geoff) 2.5e18
    -- Now let's repay one full token
    From Geoff (Erc20 BAT Approve cBAT 1.0e18)
    RepayBorrow Geoff 1.0e18 cBAT
    Assert Equal (XToken cBAT BorrowBalance Geoff) 1.5e18
    -- Let's check the overall numbers
    Assert Equal (Erc20 BAT TokenBalance Geoff) Zero
    Assert Equal (Erc20 BAT TokenBalance cBAT) 10e18
    Assert Equal (XToken cBAT TotalBorrowsCurrent) 1.5e18
    FastForward 200000 Blocks -- 1.5e18 * (1 + 200000 * 0.000005)
    Assert Equal (XToken cBAT BorrowBalance Geoff) 3e18
    Assert Equal (XToken cBAT TotalBorrowsCurrent) 3e18

Test "Borrow, hold a few blocks, and repay full"
    NewBorrow borrowAmount:1e18 borrowRate:0.000005
    Assert Equal (XToken cBAT BorrowBalance Geoff) 1e18
    Assert Equal (XToken cBAT TotalBorrowsCurrent) 1e18
    Assert Equal (Erc20 BAT TokenBalance Geoff) 1e18
    Assert Equal (Erc20 BAT TokenBalance cBAT) 9e18
    -- Now let's add some blocks and see what happs
    FastForward 300000 Blocks -- 1e18 * (1 + 300000 * 0.000005)
    Assert Equal (XToken cBAT BorrowBalance Geoff) 2.5e18
    -- Now let's repay fully
    Give Geoff 1.5e18 BAT -- Geoff had the 1.0e18 borrowed BAT
    From Geoff (Erc20 BAT Approve cBAT 2.5e18)
    RepayBorrow Geoff 2.5e18 cBAT
    Assert Equal (XToken cBAT BorrowBalance Geoff) 0e18
    -- Let's check the overall numbers
    Assert Equal (Erc20 BAT TokenBalance Geoff) 0e18
    Assert Equal (Erc20 BAT TokenBalance cBAT) 11.5e18
    Assert Equal (XToken cBAT TotalBorrowsCurrent) 0e18
    FastForward 200000 Blocks -- 0e18 * (1 + 200000 * 0.000005)
    Assert Equal (XToken cBAT BorrowBalance Geoff) 0e18
    Assert Equal (XToken cBAT TotalBorrowsCurrent) 0e18

Test "Borrow, hold a few blocks, and repay too much"
    NewBorrow borrowAmount:1e18 borrowRate:0.000005
    Assert Equal (XToken cBAT BorrowBalance Geoff) 1e18
    Assert Equal (XToken cBAT TotalBorrowsCurrent) 1e18
    -- Now let's add some blocks and see what happs
    FastForward 300000 Blocks -- 0.001e18 * (1 + 300000 * 0.000005)
    Assert Equal (XToken cBAT BorrowBalance Geoff) 2.5e18
    -- Now let's repay fully
    AllowFailures
    Prep Geoff 10e18 BAT cBAT
    Expect Changes (Erc20 BAT TokenBalance Geoff) Zero
    Expect Changes (Erc20 BAT TokenBalance cBAT) Zero
    RepayBorrow Geoff 10e18 cBAT
    Assert Revert
    -- Let's check the overall numbers
    Assert Equal (XToken cBAT BorrowBalance Geoff) 2.5e18
    Assert Equal (XToken cBAT TotalBorrowsCurrent) 2.5e18

Test "Borrow, and get a negative total cash situation"
    Invariant Success
    NewBorrow borrowAmount:1e18 borrowRate:0.000005
    Assert Equal (XToken cBAT BorrowBalance Geoff) 1e18
    Assert Equal (XToken cBAT TotalBorrowsCurrent) 1e18
    Assert Equal (Erc20 BAT TokenBalance Geoff) 1e18
    Assert Equal (Erc20 BAT TokenBalance cBAT) 9e18
    -- Let's zoom way forward into the future
    FastForward 9800000 Blocks -- 1e18 * (1 + 9800000 * 0.000005)
    Assert Equal (XToken cBAT BorrowBalance Geoff) 50e18
    Assert Equal (XToken cBAT TotalBorrowsCurrent) 50e18
    -- Now let's repay one full token
    From Geoff (Erc20 BAT Approve cBAT 1.0e18)
    RepayBorrow Geoff 1.0e18 cBAT
    Assert Equal (XToken cBAT BorrowBalance Geoff) 49e18
    Assert Equal (XToken cBAT TotalBorrowsCurrent) 49e18
    Assert Equal (Erc20 BAT TokenBalance Geoff) 0e18
    Assert Equal (Erc20 BAT TokenBalance cBAT) 10e18

Test "Borrow, hold a few blocks, and repay behalf part"
    Invariant Success
    NewBorrow borrowAmount:1e18 borrowRate:0.000005
    Assert Equal (XToken cBAT BorrowBalance Geoff) 1e18
    Assert Equal (XToken cBAT TotalBorrowsCurrent) 1e18
    Assert Equal (Erc20 BAT TokenBalance Geoff) 1e18
    Assert Equal (Erc20 BAT TokenBalance cBAT) 9e18
    -- Now let's add some blocks and see what happs
    FastForward 300000 Blocks -- 1e18 * (1 + 300000 * 0.000005)
    Assert Equal (XToken cBAT BorrowBalance Geoff) 2.5e18
    -- Now let's repay one full token from another user
    Prep Torrey 1.0e18 BAT cBAT
    RepayBorrowBehalf Torrey Geoff 1.0e18 cBAT
    Assert Equal (XToken cBAT BorrowBalance Torrey) Zero
    Assert Equal (XToken cBAT BorrowBalance Geoff) 1.5e18
    -- Let's check the overall numbers
    Assert Equal (Erc20 BAT TokenBalance Torrey) 0e18
    Assert Equal (Erc20 BAT TokenBalance Geoff) 1e18
    Assert Equal (Erc20 BAT TokenBalance cBAT) 10e18
    Assert Equal (XToken cBAT TotalBorrowsCurrent) 1.5e18
    FastForward 200000 Blocks -- 1.5e18 * (1 + 200000 * 0.000005)
    Assert Equal (XToken cBAT BorrowBalance Torrey) Zero
    Assert Equal (XToken cBAT BorrowBalance Geoff) 3e18
    Assert Equal (XToken cBAT TotalBorrowsCurrent) 3e18

Test "Prohibit repay by comptroller rejection due to mock unlist"
    NewBorrow borrowAmount:1e18 borrowRate:0.000005
    Assert Equal (XToken cBAT BorrowBalance Geoff) 1e18
    Assert Equal (XToken cBAT TotalBorrowsCurrent) 1e18
    -- Now let's add some blocks and see what happs
    FastForward 300000 Blocks -- 1e18 * (1 + 300000 * 0.000005)
    Assert Equal (XToken cBAT BorrowBalance Geoff) 2.5e18
    -- Now let's repay fully
    AllowFailures
    Prep Geoff 10e18 BAT cBAT
    Expect Changes (Erc20 BAT TokenBalance Geoff) Zero
    Expect Changes (Erc20 BAT TokenBalance cBAT) Zero
    Comptroller UnList cZRX -- Mock unlist ZRX
    RepayBorrow Geoff 2.5e18 cZRX
    Assert RevertCustomError RepayBorrowComptrollerRejection 9
    -- Let's check the overall numbers
    Assert Equal (XToken cBAT BorrowBalance Geoff) 2.5e18
    Assert Equal (XToken cBAT TotalBorrowsCurrent) 2.5e18

Test "Repay fails with insufficient allowance"
    NewBorrow borrowAmount:1e18 borrowRate:0.000005
    Assert Equal (XToken cBAT BorrowBalance Geoff) 1e18
    Assert Equal (XToken cBAT TotalBorrowsCurrent) 1e18
    -- Now let's add some blocks and see what happs
    FastForward 300000 Blocks -- 1e18 * (1 + 300000 * 0.000005)
    Assert Equal (XToken cBAT BorrowBalance Geoff) 2.5e18
    -- Now let's repay fully
    AllowFailures
    Prep Geoff 100e18 BAT cBAT allowanceAmount:1.5e18
    Expect Changes (Erc20 BAT TokenBalance Geoff) Zero
    Expect Changes (Erc20 BAT TokenBalance cBAT) Zero
    RepayBorrow Geoff 2.5e18 cBAT
    Assert Revert "revert Insufficient allowance"
    -- Let's check the overall numbers
    Assert Equal (XToken cBAT BorrowBalance Geoff) 2.5e18
    Assert Equal (XToken cBAT TotalBorrowsCurrent) 2.5e18

Test "Repay fails with insufficient balance"
    NewBorrow borrowAmount:1e18 borrowRate:0.000005
    Assert Equal (XToken cBAT BorrowBalance Geoff) 1e18
    Assert Equal (XToken cBAT TotalBorrowsCurrent) 1e18
    -- Now let's add some blocks and see what happs
    FastForward 300000 Blocks -- 1e18 * (1 + 300000 * 0.000005)
    Assert Equal (XToken cBAT BorrowBalance Geoff) 2.5e18
    -- Now let's repay fully
    AllowFailures
    Prep Geoff 0e18 BAT cBAT allowanceAmount:2.5e18
    Expect Changes (Erc20 BAT TokenBalance Geoff) Zero
    Expect Changes (Erc20 BAT TokenBalance cBAT) Zero
    RepayBorrow Geoff 2.5e18 cBAT
    Assert Revert "revert Insufficient balance"
    -- Let's check the overall numbers
    Assert Equal (XToken cBAT BorrowBalance Geoff) 2.5e18
    Assert Equal (XToken cBAT TotalBorrowsCurrent) 2.5e18
