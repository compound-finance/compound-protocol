
Test "Borrow some BAT and enters BAT if BAT not entered"
    NewComptroller price:1.0
    NewXToken ZRX cZRX
    NewXToken BAT cBAT
    Give cBAT 10e18 BAT -- Faucet some bat to borrow
    Support cZRX collateralFactor:0.5
    Support cBAT collateralFactor:0.5
    Prep Geoff Some ZRX cZRX
    Mint Geoff 100e18 cZRX
    EnterMarkets Geoff cZRX
    Borrow Geoff 1e18 cBAT
    Assert Equal (cToken cBAT BorrowBalance Geoff) (Exactly 1e18)
    Assert Equal (Erc20 BAT TokenBalance Geoff) (Exactly 1e18)
    Assert Equal (Erc20 BAT TokenBalance cBAT) (Exactly 9e18)
    Assert Equal (Comptroller MembershipLength Geoff) (Exactly 2)
    Assert True (Comptroller CheckMembership Geoff cZRX)
    Assert True (Comptroller CheckMembership Geoff cBAT)

-- Now that we revert instead of returning failures, the user does not get marked as entered
Test "Borrow some BAT fails, user not entered"
    NewComptroller price:1.0
    NewXToken ZRX cZRX
    NewXToken BAT cBAT
    Support cZRX collateralFactor:0.5
    Support cBAT collateralFactor:0.5
    Prep Geoff Some ZRX cZRX
    Mint Geoff 100e18 cZRX
    EnterMarkets Geoff cZRX
    Invariant Static (Erc20 BAT TokenBalance Geoff)
    Invariant Static (Erc20 BAT TokenBalance cBAT)
    AllowFailures
    Borrow Geoff 1e18 cBAT
    Assert RevertCustomError BorrowCashNotAvailable
    Assert Equal (Comptroller MembershipLength Geoff) (Exactly 1)
    Assert True (Comptroller CheckMembership Geoff cZRX)
    Assert False (Comptroller CheckMembership Geoff cBAT)

Test "Borrow some BAT fails when no BAT available"
    NewComptroller price:1.0
    NewXToken ZRX cZRX
    NewXToken BAT cBAT
    Support cZRX collateralFactor:0.5
    Support cBAT collateralFactor:0.5
    Prep Geoff Some ZRX cZRX
    Mint Geoff 100e18 cZRX
    EnterMarkets Geoff cZRX cBAT
    Invariant Static (XToken cZRX ExchangeRateStored)
    AllowFailures
    Borrow Geoff 1e18 cBAT
    Assert RevertCustomError BorrowCashNotAvailable

Test "Borrow fails if market not listed"
    NewComptroller price:1.0
    NewXToken ZRX cZRX
    NewXToken BAT cBAT
    Give cBAT 10e18 BAT -- Faucet some bat to borrow
    Support cZRX collateralFactor:0.5
    Prep Geoff Some ZRX cZRX
    Mint Geoff 100e18 cZRX
    EnterMarkets Geoff cZRX
    AllowFailures
    Borrow Geoff 1e18 cBAT
    Assert RevertCustomError BorrowComptrollerRejection 9

Test "Borrow some BAT from Excess Cash"
    Invariant Success
    NewComptroller price:1.0
    NewXToken ZRX cZRX
    NewXToken BAT cBAT
    Give cBAT 10e18 BAT -- Faucet some bat to borrow
    Support cZRX collateralFactor:0.5
    Support cBAT collateralFactor:0.5
    Prep Geoff Some ZRX cZRX
    Mint Geoff 100e18 cZRX
    EnterMarkets Geoff cZRX cBAT
    Borrow Geoff 1e18 cBAT
    Assert Equal (cToken cBAT BorrowBalance Geoff) (Exactly 1e18)
    Assert Equal (Erc20 BAT TokenBalance Geoff) (Exactly 1e18)
    Assert Equal (Erc20 BAT TokenBalance cBAT) (Exactly 9e18)

Test "Borrow some BAT reverts if borrow is paused"
    NewComptroller price:1.0
    Comptroller SetPauseGuardian Coburn
    NewXToken ZRX cZRX
    NewXToken BAT cBAT
    Give cBAT 10e18 BAT -- Faucet some bat to borrow
    Support cZRX collateralFactor:0.5
    Support cBAT collateralFactor:0.5
    Prep Geoff Some ZRX cZRX
    Mint Geoff 100e18 cZRX
    EnterMarkets Geoff cZRX cBAT
    From Coburn (Comptroller SetGuardianMarketPaused cBAT "Borrow" True)
    AllowFailures
    Borrow Geoff 1e18 cBAT
    Assert Revert "revert borrow is paused"
    Assert Equal (cToken cBAT BorrowBalance Geoff) 0
    Assert Equal (Erc20 BAT TokenBalance Geoff) 0
    Assert Equal (Erc20 BAT TokenBalance cBAT) (Exactly 10e18)
    Comptroller SetGuardianMarketPaused cBAT "Borrow" False
    Borrow Geoff 1e18 cBAT
    Assert Equal (cToken cBAT BorrowBalance Geoff) (Exactly 1e18)
    Assert Equal (Erc20 BAT TokenBalance Geoff) (Exactly 1e18)
    Assert Equal (Erc20 BAT TokenBalance cBAT) (Exactly 9e18)
