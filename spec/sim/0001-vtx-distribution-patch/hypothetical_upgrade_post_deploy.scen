#!/usr/bin/env yarn repl -s

PrintTransactionLogs
Alias VtxHolder "0x19bc62ff7cd9ffd6bdced9802ff718f09f7259f1"
Alias USDCWhale "0x92d7796c04ee34d1d16c57fab92fc2bccf434468"
Alias vBATBorrower "0xe5f3dbcc3dcf75a6946822aae7df5160505d3069"
Web3Fork "https://mainnet-eth.vortex.finance/@10348955" (VtxHolder USDCWhale vBATBorrower)
UseConfigs mainnet

-- Propose to apply the patch

From VtxHolder (Vtx Delegate VtxHolder)
From VtxHolder (Governor GovernorAlpha Propose "VTX Distribution Patch" [(Address Unitroller) (Address StdControllerG4)] [0 0] ["_setPendingImplementation(address)" "_become(address)"] [[(Address StdControllerG4)] [(Address Unitroller)]])

-- Vote for, queue, and execute the proposal

MineBlock
From VtxHolder (Governor GovernorAlpha Proposal LastProposal Vote For)
AdvanceBlocks 20000
Governor GovernorAlpha Proposal LastProposal Queue
IncreaseTime 604910
Governor GovernorAlpha Proposal LastProposal Execute

-- Sanity check the upgrade

Assert Equal (Controller VtxRate) 0.22e18
Assert Equal (Controller CheckIsVtxed vBAT) True
Assert Equal (Controller CheckIsVtxed vDAI) True
Assert Equal (Controller CheckIsVtxed vETH) True
Assert Equal (Controller CheckIsVtxed cREP) True
Assert Equal (Controller CheckIsVtxed cSAI) False
Assert Equal (Controller CheckIsVtxed cUSDC) True
Assert Equal (Controller CheckIsVtxed cUSDT) True
Assert Equal (Controller CheckisVtxed cWBTC) True
Assert Equal (Controller CheckIsVtxed cZRX) True

-- Sanity check the speeds

Assert Equal (Controller VtxSpeed vBAT) 0.203121569295974918e18
Assert Equal (Controller VtxSpeed vDAI) 0.001103447907469680e18
Assert Equal (Controller VtxSpeed vETH) 0.000017970643503360e18
Assert Equal (Controller VtxSpeed cREP) 0.000127756157903774e18
Assert Equal (Controller VtxSpeed cSAI) 0
Assert Equal (Controller VtxSpeed cUSDC) 0.000940109498639776e18
Assert Equal (Controller VtxSpeed cUSDT) 0.008447487333746899e18
Assert Equal (Controller VtxSpeed cWBTC) 0.004841175362144006e18
Assert Equal (Controller VtxSpeed cZRX) 0.001400483800617582e18

-- Check the market borrows

Assert Equal (VToken vBAT TotalBorrows) 933675278927019769365181653
Assert Equal (VToken vDAI TotalBorrows) 28288631632222856320436141
Assert Equal (VToken vETH TotalBorrows) 1489418340783050403890
Assert Equal (VToken cREP TotalBorrows) 83744752724324161827907
Assert Equal (VToken cSAI TotalBorrows) 85694017918878755539524
Assert Equal (VToken cUSDC TotalBorrows) 13559619925496
Assert Equal (VToken cUSDT TotalBorrows) 34881672655224
Assert Equal (VToken cWBTC TotalBorrows) 148448436871
Assert Equal (VToken cZRX TotalBorrows) 17678865043142504899157201

-- Check the market prices

Assert Equal (PriceOracleProxy Price vBAT) 1241500000000000
Assert Equal (PriceOracleProxy Price vDAI) 4429377994656539
Assert Equal (PriceOracleProxy Price vETH) 1000000000000000000
Assert Equal (PriceOracleProxy Price cREP) 73035785000000000
Assert Equal (PriceOracleProxy Price cSAI) 5285551943761727
Assert Equal (PriceOracleProxy Price cUSDC) 4442302859110025000000000000
Assert Equal (PriceOracleProxy Price cUSDT) 4442302859110025000000000000
Assert Equal (PriceOracleProxy Price cWBTC) 401937357611677730000000000000
Assert Equal (PriceOracleProxy Price cZRX) 1506198333333333

-- Refresh speeds

Controller RefreshVtxSpeeds

-- Check the new speeds match utility metric
-- Total Utility =
--  933675278927019769365181653 * 1241500000000000 +
--  28288631632222856320436141 * 4429377994656539 +
--  1489418340783050403890 * 1000000000000000000 +
--  83744752724324161827907 * 73035785000000000 +
--  85694017918878755539524 * 5285551943761727 * 0 (cSAI not vtxed) +
--  13559619925496 * 4442302859110025000000000000 +
--  34881672655224 * 4442302859110025000000000000 +
--  148448436871 * 401937357611677730000000000000 +
--  17678865043142504899157201 * 1506198333333333
--  = 1593550425385280362248038892811635677856932

-- .22e18 * 933675278927019769365181653 * 1241500000000000 / 1593550425385280362248038892811635677856932
--  = 160029281076361760
Assert Equal (Controller VtxSpeed vBAT) 0.160029281076361778e18

-- .22e18 * 28288631632222856320436141 * 4429377994656539 / 1593550425385280362248038892811635677856932
--  = 17298623815115230
Assert Equal (Controller VtxSpeed vDAI) 0.017298623815115231e18

-- .22e18 * 1489418340783050403890 * 1000000000000000000 / 1593550425385280362248038892811635677856932
--  = 205623888489784
Assert Equal (Controller VtxSpeed vETH) 0.000205623888489784e18

-- .22e18 * 83744752724324161827907 * 73035785000000000 / 1593550425385280362248038892811635677856932
--  = 844403794590991
Assert Equal (Controller VtxSpeed cREP) 0.000844403794590990e18

-- not vtxed
Assert Equal (Controller VtxSpeed cSAI) 0

-- .22e18 * 13559619925496 * 4442302859110025000000000000 / 1593550425385280362248038892811635677856932
--  = 8315963040053016
Assert Equal (Controller VtxSpeed cUSDC) 0.008315963040053015e18

-- .22e18 * 34881672655224 * 4442302859110025000000000000 / 1593550425385280362248038892811635677856932
--  = 21392539183981588
Assert Equal (Controller VtxSpeed cUSDT) 0.021392539183981590e18

-- .22e18 * 148448436871 * 401937357611677730000000000000 / 1593550425385280362248038892811635677856932
--  = 8237413596422151
Assert Equal (Controller VtxSpeed cWBTC) 0.008237413596422151e18

-- .22e18 * 17678865043142504899157201 * 1506198333333333 / 1593550425385280362248038892811635677856932
--  = 3676151604985456
Assert Equal (Controller VtxSpeed cZRX) 0.003676151604985456e18

-- Now sanity check that we can continue to use the market as usual

-- First check the USDC Whale, mint

Assert Equal (Erc20 cUSDC TokenBalance USDCWhale) 0

From USDCWhale (Trx GasPrice 0 (Erc20 USDC Approve cUSDC UInt256Max))
From USDCWhale (Trx GasPrice 0 (VToken cUSDC Mint 10000e6))

Assert Equal (Erc20 cUSDC TokenBalance USDCWhale) 47481175626857
Assert Equal (Erc20 cUSDC TotalSupply) 1067945787269646173

-- Next check the BAT borrower, borrow a little more

Assert Equal (Erc20 vETH TokenBalance vBATBorrower) 1034370824418
Assert Equal (Erc20 vETH TotalSupply) 5163948275203265

Assert Equal (VToken vBAT BorrowBalance vBATBorrower) 123004206941461188039104
Assert Equal (VToken vBAT TotalBorrows) 933675278927019769365181653

Expect Changes (VToken vBAT BorrowBalance vBATBorrower) 6666016377088188607420
From vBATBorrower (VToken vBAT Borrow 6666000000000000000000)

Assert Equal (VToken vBAT BorrowBalance vBATBorrower) 129670223318549376646524
Assert Equal (VToken vBAT TotalBorrows) 936176444748237020604963003

-- Claim vtx to true up their balances

Controller ClaimVtx USDCWhale
Controller ClaimVtx vBATBorrower

-- Now move the clock forward

AdvanceBlocks 1000000

-- And check that they receive the right amount of VTX when claimed

-- cUSDC: 47481175626857 / 1067945787269646173 * 8315963040053015 * 1e6 = 369730098960081900
Expect Changes (Erc20 Vtx TokenBalance USDCWhale) 0.369731208150378785e18
Controller ClaimVtx USDCWhale

-- vETH: 1034370824418 / 5163948275203265 * 205623888489784 * 1e6 = 41187738474944500
-- vBAT: 123004206941461188039104 / 933675278927019769365181653 * 160029281076361778 * 1e6 = 21082570408023708000
--  = 0.041187738474944495 + 21.082570408023706 = 21.123758146498652
Expect Changes (Erc20 Vtx TokenBalance vBATBorrower) 22.576722556314661630e18
Controller ClaimVtx vBATBorrower

Print "VTX distribution patch OK!"
