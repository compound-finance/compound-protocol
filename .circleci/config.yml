version: 2.1

orbs:
  codecov: codecov/codecov@1.0.3

jobs:
  test:
    docker:
      - image: circleci/node:13
    working_directory: ~/repo
    steps:
      - run:
        |
          sudo wget https://github.com/ethereum/solidity/releases/download/v0.5.16/solc-static-linux -O /usr/local/bin/solc
          sudo chmod +x /usr/local/bin/solc
      - checkout
      - restore_cache:
          keys:
          - v3-dependencies-{{ checksum "yarn.lock" }}
      - restore_cache:
          keys:
          - v3-scenario/dependencies-{{ checksum "scenario/yarn.lock" }}
      - restore_cache:
          keys:
          - v3-solcache
      - restore_cache:
          keys:
          - v3-scencache
      - run: yarn install || (yarn cache clean && yarn install)
      - run: cd scenario && (yarn install || (yarn cache clean && yarn install))
      - save_cache:
          paths:
            - node_modules
          key: v3-dependencies-{{ checksum "yarn.lock" }}
      - save_cache:
          paths:
            - scenario/node_modules
          key: v3-scenario-dependencies-{{ checksum "scenario/yarn.lock" }}
      - attach_workspace:
          at: ~/repo
      - run: mkdir ~/junit
      - run: ./script/build_scenarios
      - run:
          shell: /bin/bash -eox pipefail -O globstar
          name: yarn test
          command: JEST_JUNIT_OUTPUT_DIR=~/junit JEST_JUNIT_OUTPUT_NAME=test-results.xml yarn test $(circleci tests glob 'tests/**/**Test.js' | circleci tests split --split-by=timings)
      - save_cache:
          paths:
            - .build
            - .solcache
          key: v3-solcache
      - save_cache:
          paths:
            - scenario/.tsbuilt
            - .scencache
          key: v3-scencache
      - store_test_results:
          path: ~/junit
      - store_artifacts:
          path: ~/junit
    parallelism: 3
    resource_class: xlarge

  verify:
    docker:
      - image: vortexfinance/alpine-java-z3:latest
    working_directory: ~/repo
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo
      - run: script/verify
    parallelism: 4

  coverage:
    docker:
      - image: circleci/node:13
    working_directory: ~/repo
    steps:
      - run:
        |
          sudo wget https://github.com/ethereum/solidity/releases/download/v0.5.16/solc-static-linux -O /usr/local/bin/solc
          sudo chmod +x /usr/local/bin/solc
      - checkout
      - restore_cache:
          keys:
          - v3-dependencies-{{ checksum "yarn.lock" }}
      - restore_cache:
          keys:
          - v3-scenario-dependencies-{{ checksum "scenario/yarn.lock" }}
      - restore_cache:
          keys:
          - v3-solcache
      - restore_cache:
          keys:
          - v3-scencache
      - run: yarn install || (yarn cache clean && yarn install)
      - run: cd scenario && (yarn install || (yarn cache clean && yarn install))
      - save_cache:
          paths:
            - node_modules
          key: v3-dependencies-{{ checksum "yarn.lock" }}
      - save_cache:
          paths:
            - scenario/node_modules
          key: v2-scenario-dependencies-{{ checksum "scenario/package.json" }}
      - attach_workspace:
          at: ~/repo
      - run: mkdir ~/junit
      - run: ./script/build_scenarios
      - run:
          shell: /bin/bash -eox pipefail -O globstar
          name: yarn test
          no_output_timeout: 30m
          command: JEST_JUNIT_OUTPUT_DIR=~/junit JEST_JUNIT_OUTPUT_NAME=test-results.xml script/coverage $(circleci tests glob 'tests/**/**Test.js' | circleci tests split --split-by=timings) -- --maxWorkers=4
      - save_cache:
          paths:
            - .build
            - .solcachecov
          key: v3-solcache
      - save_cache:
          paths:
            - scenario/.tsbuilt
            - .scencache
          key: v3-scencache
      - store_test_results:
          path: ~/junit
      - store_artifacts:
          path: ~/repo/coverage/coverage-final.json
          destination: coverage-final.json
      - store_artifacts:
          path: ~/repo/coverage/lcov-report
          destination: coverage
      - codecov/upload:
          file: ~/repo/coverage/coverage-final.json
    parallelism: 10
    resource_class: xlarge

  lint:
    docker:
      - image: circleci/node:13
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
          - v3-dependencies-{{ checksum "yarn.lock" }}
      - run: yarn install || (yarn cache clean && yarn install)
      - save_cache:
          paths:
            - node_modules
          key: v3-dependencies-{{ checksum "yarn.lock" }}
      - attach_workspace:
          at: ~/repo
      - run: yarn run lint

  docker:
    docker:
      - image: cimg/go:1.13
    steps:
      - run: |
          if [ -z "$DOCKER_USER" -o -z "$DOCKER_PASS" -o -z "$DOCKER_REPO" ]; then
            echo "No DOCKER_REPO, DOCKER_USER or DOCKER_PASS, skipping Docker build..."
            circleci-agent step halt
          fi
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run: |
          echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin

          set -x

          IMAGE_NAME=${CIRCLE_PROJECT_USERNAME/-/}/$CIRCLE_PROJECT_REPONAME
          COMMIT_TAG=$(git rev-parse --short HEAD)
          docker build -t $IMAGE_NAME:$COMMIT_TAG .
          docker push $IMAGE_NAME:$COMMIT_TAG

          if [ -n "$CIRCLE_TAG" ]; then
            docker build -t $IMAGE_NAME:$CIRCLE_TAG .
            docker push $IMAGE_NAME:$CIRCLE_TAG
          fi

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - test
      - coverage
      - lint
      - verify
      - docker:
          filters:
            tags:
              only: /^v.*/
